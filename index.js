const login = require('facebook-chat-api');
const fs = require('fs');
const axios = require('axios');

// fbstate.json ржерзЗржХрзЗ рж▓ржЧржЗржи ржЗржиржлрзЛ рж▓рзЛржб
const appState = require('./fbstate.json');

// replies.json ржерзЗржХрзЗ ржЯрж╛рж░рзНржЧрзЗржЯ ржорзЗрж╕рзЗржЬ ржУ рж░рж┐ржкрзНрж▓рж╛ржЗ рж▓рзЛржб
const replies = require('./replies.json');

// ржЧрж╛ржи ржЦрзБржБржЬрзЗ рж░рж╛ржЦрж╛ ржЬржирзНржп ржЕрж╕рзНржерж╛рзЯрзА рж╕рзНржЯрзЛрж░
let songSearchResults = {};

login({ appState }, (err, api) => {
    if (err) return console.error("тЭМ Login failed:", err);

    console.log("тЬЕ Bot is now running...");

    api.listenMqtt((err, message) => {
        if (err || !message || !message.body) return;

        const body = message.body.toLowerCase();
        const threadID = message.threadID;

        // ЁЯФБ рж╕рж╛ржзрж╛рж░ржг ржЯрж╛рж░рзНржЧрзЗржЯ рж░рзЗрж╕ржкржирзНрж╕
        for (const target in replies) {
            if (body.startsWith(target.toLowerCase())) {
                api.sendMessage(replies[target], threadID);
                return;
            }
        }

        // ЁЯО╡ /song ржЧрж╛ржи ржЕржирзБрж╕ржирзНржзрж╛ржи
        if (body.startsWith("/song ")) {
            const query = encodeURIComponent(body.replace("/song ", ""));
            const apiUrl = `https://saavn.dev/api/search/songs?query=${query}`;

            axios.get(apiUrl).then(res => {
                const results = res.data.data.results.slice(0, 5);
                if (results.length === 0) {
                    api.sendMessage("тЭМ ржХрзЛржирзЛ ржЧрж╛ржи ржЦрзБржБржЬрзЗ ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯржирж┐ред", threadID);
                    return;
                }

                // рж╕рзНржЯрзЛрж░ ржХрж░рзЗ рж░рж╛ржЦрж╛
                songSearchResults[threadID] = results;

                let response = "ЁЯО╡ ржЧрж╛ржи ржкрж╛ржУрзЯрж╛ ржЧрзЗржЫрзЗ:\n\n";
                results.forEach((song, index) => {
                    response += `${index + 1}. ${song.name} - ${song.primaryArtists}\nЁЯХТ ${song.duration} seconds\n\n`;
                });
                response += "ржпрзЗ ржЧрж╛ржиржЯрж┐ ржЪрж╛ржУ рждрж╛рж░ ржирж╛ржорзНржмрж╛рж░ reply ржХрж░рзЛред (ржпрзЗржоржи: 1)";

                api.sendMessage(response, threadID);
            }).catch(() => {
                api.sendMessage("тЭМ ржЧрж╛ржи ржЦрзЛржБржЬрж╛рж░ рж╕ржорзЯ рж╕ржорж╕рзНржпрж╛ рж╣рзЯрзЗржЫрзЗред", threadID);
            });

        } else if (/^[1-5]$/.test(body) && songSearchResults[threadID]) {
            // ЁЯОз ржЗржЙржЬрж╛рж░ ржЧрж╛ржи ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рж▓рзЗ
            const index = parseInt(body) - 1;
            const song = songSearchResults[threadID][index];
            if (!song) {
                api.sendMessage("тЭМ ржПржЗ ржирж╛ржорзНржмрж╛рж░рзЗ ржХрзЛржирзЛ ржЧрж╛ржи ржЦрзБржБржЬрзЗ ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯржирж┐ред", threadID);
                return;
            }

            api.sendMessage({
                body: `ЁЯОз ${song.name}\nBy: ${song.primaryArtists}`,
                attachment: axios.get(song.downloadUrl[4].link, { responseType: 'stream' }).then(res => res.data)
            }, threadID);

            delete songSearchResults[threadID]; // ржПржХржмрж╛рж░ ржкрж╛ржарж╛ржирзЛ рж╣рж▓рзЗ ржорзБржЫрзЗ ржжрж╛ржУ
        }
    });
});
